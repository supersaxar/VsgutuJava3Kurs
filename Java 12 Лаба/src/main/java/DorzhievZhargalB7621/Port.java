package DorzhievZhargalB7621;

import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.atomic.AtomicInteger;

public class Port {
    private final BlockingQueue<Dock> docks;
    private final AtomicInteger containerCount;
    private final int capacity;

    public Port(int capacity, int dockCount) {
        this.capacity = capacity;
        this.containerCount = new AtomicInteger(0);
        this.docks = new ArrayBlockingQueue<>(dockCount);

        for (int i = 0; i < dockCount; i++) {
            docks.offer(new Dock(i));
        }
        System.out.println("–ü–æ—Ä—Ç —Å–æ–∑–¥–∞–Ω: " + dockCount + " –ø—Ä–∏—á–∞–ª–æ–≤, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å " + capacity + " –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤");
    }

    public Dock acquireDock(String shipName) throws InterruptedException {
        Dock dock = docks.take();
        System.out.println("üö¢ " + shipName + " –∑–∞–Ω—è–ª –ø—Ä–∏—á–∞–ª ‚Ññ " + dock.getId());
        return dock;
    }

    public void releaseDock(Dock dock, String shipName) {
        docks.offer(dock);
        System.out.println("üèÅ " + shipName + " –æ—Å–≤–æ–±–æ–¥–∏–ª –ø—Ä–∏—á–∞–ª ‚Ññ " + dock.getId());
    }

    public boolean loadContainers(int count) {
        int currentCount;
        do {
            currentCount = containerCount.get();
            if (currentCount + count > capacity) {
                System.out.println("‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–∞ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ " + count + " –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤");
                return false;
            }
        } while (!containerCount.compareAndSet(currentCount, currentCount + count));
        System.out.println("üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ " + count + " –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤. –í—Å–µ–≥–æ –≤ –ø–æ—Ä—Ç—É: " + containerCount.get());
        return true;
    }


    public boolean unloadContainers(int count) {
        int currentCount;
        do {
            currentCount = containerCount.get();
            if (currentCount - count < 0) {
                System.out.println("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ " + count + " –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤");
                return false;
            }
        } while (!containerCount.compareAndSet(currentCount, currentCount - count));
        System.out.println("üì¶ –í—ã–≥—Ä—É–∂–µ–Ω–æ " + count + " –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤. –í—Å–µ–≥–æ –≤ –ø–æ—Ä—Ç—É: " + containerCount.get());
        return true;
    }

    public int getCurrentContainerCount() {
        return containerCount.get();
    }
}