package DorzhievZhargalB7621;

public class Ship implements Runnable {
    private final String name;
    private final Port port;
    private int containerCapacity;
    private int currentContainers;
    private final int maxLoad;

    public Ship(String name, Port port, int containerCapacity, int maxLoad) {
        this.name = name;
        this.port = port;
        this.containerCapacity = containerCapacity;
        this.currentContainers = (int)(Math.random() * containerCapacity); // –ù–∞—á–∞–ª—å–Ω–∞—è —Å–ª—É—á–∞–π–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
        this.maxLoad = maxLoad;
        System.out.println("üõ≥Ô∏è " + name + " —Å–æ–∑–¥–∞–Ω: –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ " + currentContainers + " –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –≥—Ä—É–∑–æ–ø–æ–¥—ä–µ–º–Ω–æ—Å—Ç—å " + containerCapacity);
    }

    @Override
    public void run() {
        try {
            for (int i = 0; i < 5; i++) {
                System.out.println("\nüö¢ " + name + " –Ω–∞—á–∏–Ω–∞–µ—Ç " + (i+1) + "-–π —Ä–µ–π—Å");
                processDocking();
                Thread.sleep((long) (Math.random() * 2000));
            }
            System.out.println("‚úÖ " + name + " –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É");
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }

    private void processDocking() throws InterruptedException {
        Dock dock = port.acquireDock(name);
        try {
            System.out.println(name + " –ø—Ä–∏–±—ã–ª –Ω–∞ –ø—Ä–∏—á–∞–ª ‚Ññ " + dock.getId());

            if (currentContainers < containerCapacity) {
                int loadAmount = Math.min(maxLoad, containerCapacity - currentContainers);
                if (port.unloadContainers(loadAmount)) {
                    currentContainers += loadAmount;
                    System.out.println(name + " –∑–∞–≥—Ä—É–∑–∏–ª " + loadAmount + " –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏–∑ –ø–æ—Ä—Ç–∞. –ù–∞ –±–æ—Ä—Ç—É: " + currentContainers);
                } else {
                    System.out.println(name + " –Ω–µ —Å–º–æ–≥ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏–∑ –ø–æ—Ä—Ç–∞");
                }
            }

            if (currentContainers > 0) {
                int unloadAmount = Math.min(maxLoad, currentContainers);
                if (port.loadContainers(unloadAmount)) {
                    currentContainers -= unloadAmount;
                    System.out.println(name + " –≤—ã–≥—Ä—É–∑–∏–ª " + unloadAmount + " –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ –ø–æ—Ä—Ç. –û—Å—Ç–∞–ª–æ—Å—å –Ω–∞ –±–æ—Ä—Ç—É: " + currentContainers);
                } else {
                    System.out.println(name + " –Ω–µ —Å–º–æ–≥ –≤—ã–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ –ø–æ—Ä—Ç");
                }
            }
        } finally {
            port.releaseDock(dock, name);
        }
    }
}